<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="pers.tandy.chis.modules.financialmanagement.dao.PayableAccountMapper">
  <resultMap id="BaseResultMap" type="pers.tandy.chis.modules.financialmanagement.bean.PayableAccount">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="lsh" jdbcType="VARCHAR" property="lsh" />
    <result column="pem_supplier_id" jdbcType="INTEGER" property="pemSupplierId" />
    <result column="payable_amount" jdbcType="REAL" property="payableAmount" />
    <result column="sys_clinic_id" jdbcType="INTEGER" property="sysClinicId" />
    <result column="creator_id" jdbcType="INTEGER" property="creatorId" />
    <result column="creation_date" jdbcType="TIMESTAMP" property="creationDate" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, lsh, pem_supplier_id, payable_amount, sys_clinic_id, creator_id, creation_date
  </sql>
  <select id="selectByExample" parameterType="pers.tandy.chis.modules.financialmanagement.bean.PayableAccountExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from flm_payable_account
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from flm_payable_account
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from flm_payable_account
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="pers.tandy.chis.modules.financialmanagement.bean.PayableAccountExample">
    delete from flm_payable_account
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="pers.tandy.chis.modules.financialmanagement.bean.PayableAccount">
    insert into flm_payable_account (id, lsh, pem_supplier_id,
      payable_amount, sys_clinic_id, creator_id,
      creation_date)
    values (#{id,jdbcType=INTEGER}, #{lsh,jdbcType=VARCHAR}, #{pemSupplierId,jdbcType=INTEGER},
      #{payableAmount,jdbcType=REAL}, #{sysClinicId,jdbcType=INTEGER}, #{creatorId,jdbcType=INTEGER},
      #{creationDate,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="pers.tandy.chis.modules.financialmanagement.bean.PayableAccount">
    insert into flm_payable_account
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="lsh != null">
        lsh,
      </if>
      <if test="pemSupplierId != null">
        pem_supplier_id,
      </if>
      <if test="payableAmount != null">
        payable_amount,
      </if>
      <if test="sysClinicId != null">
        sys_clinic_id,
      </if>
      <if test="creatorId != null">
        creator_id,
      </if>
      <if test="creationDate != null">
        creation_date,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="lsh != null">
        #{lsh,jdbcType=VARCHAR},
      </if>
      <if test="pemSupplierId != null">
        #{pemSupplierId,jdbcType=INTEGER},
      </if>
      <if test="payableAmount != null">
        #{payableAmount,jdbcType=REAL},
      </if>
      <if test="sysClinicId != null">
        #{sysClinicId,jdbcType=INTEGER},
      </if>
      <if test="creatorId != null">
        #{creatorId,jdbcType=INTEGER},
      </if>
      <if test="creationDate != null">
        #{creationDate,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="pers.tandy.chis.modules.financialmanagement.bean.PayableAccountExample" resultType="java.lang.Long">
    select count(*) from flm_payable_account
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update flm_payable_account
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.lsh != null">
        lsh = #{record.lsh,jdbcType=VARCHAR},
      </if>
      <if test="record.pemSupplierId != null">
        pem_supplier_id = #{record.pemSupplierId,jdbcType=INTEGER},
      </if>
      <if test="record.payableAmount != null">
        payable_amount = #{record.payableAmount,jdbcType=REAL},
      </if>
      <if test="record.sysClinicId != null">
        sys_clinic_id = #{record.sysClinicId,jdbcType=INTEGER},
      </if>
      <if test="record.creatorId != null">
        creator_id = #{record.creatorId,jdbcType=INTEGER},
      </if>
      <if test="record.creationDate != null">
        creation_date = #{record.creationDate,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update flm_payable_account
    set id = #{record.id,jdbcType=INTEGER},
      lsh = #{record.lsh,jdbcType=VARCHAR},
      pem_supplier_id = #{record.pemSupplierId,jdbcType=INTEGER},
      payable_amount = #{record.payableAmount,jdbcType=REAL},
      sys_clinic_id = #{record.sysClinicId,jdbcType=INTEGER},
      creator_id = #{record.creatorId,jdbcType=INTEGER},
      creation_date = #{record.creationDate,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="pers.tandy.chis.modules.financialmanagement.bean.PayableAccount">
    update flm_payable_account
    <set>
      <if test="lsh != null">
        lsh = #{lsh,jdbcType=VARCHAR},
      </if>
      <if test="pemSupplierId != null">
        pem_supplier_id = #{pemSupplierId,jdbcType=INTEGER},
      </if>
      <if test="payableAmount != null">
        payable_amount = #{payableAmount,jdbcType=REAL},
      </if>
      <if test="sysClinicId != null">
        sys_clinic_id = #{sysClinicId,jdbcType=INTEGER},
      </if>
      <if test="creatorId != null">
        creator_id = #{creatorId,jdbcType=INTEGER},
      </if>
      <if test="creationDate != null">
        creation_date = #{creationDate,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="pers.tandy.chis.modules.financialmanagement.bean.PayableAccount">
    update flm_payable_account
    set lsh = #{lsh,jdbcType=VARCHAR},
      pem_supplier_id = #{pemSupplierId,jdbcType=INTEGER},
      payable_amount = #{payableAmount,jdbcType=REAL},
      sys_clinic_id = #{sysClinicId,jdbcType=INTEGER},
      creator_id = #{creatorId,jdbcType=INTEGER},
      creation_date = #{creationDate,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>



  <!-- ************************************************************************************************************* -->

  <select id="selectByCriteria" resultType="map">
    select a.*, ifnull(b.paidAmount, 0) as paidAmount
    from view_flm_payable_account a
    left join (
    select
    id, flm_payable_account_id,
    ROUND(sum(ifnull(paid_quantity * cost_price, 0)), 2) as paidAmount
    from flm_paid_account
    group by flm_payable_account_id
    ) b on a.id = b.flm_payable_account_id
    <trim prefix="where" suffixOverrides="and">
      <if test="creationDate != null &amp;&amp; creationDate.length == 2">
        (DATE_FORMAT(a.creationDate, '%Y-%m-%d') between #{creationDate[0]} and #{creationDate[1]}) and
      </if>
      <if test="pemSupplierId != null">
        (a.pemSupplierId = #{pemSupplierId}) and
      </if>
      <if test="sysClinicId != null">
        (a.sysClinicId = #{sysClinicId}) and
      </if>
      <if test="payUp != null &amp;&amp; payUp">
        (a.payableAmount = b.paidAmount) and
      </if>
      <if test="payUp != null &amp;&amp; !payUp">
        (a.payableAmount != ifnull(b.paidAmount, 0)) and
      </if>
    </trim>
    order by a.id desc
  </select>

</mapper>
